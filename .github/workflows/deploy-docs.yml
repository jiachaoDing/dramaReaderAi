# 工作流的名称
name: Deploy VuePress site to Pages

# 触发条件：什么情况下会执行这个工作流
on:
  push:            # 当代码被推送时
    branches: [main]  # 只在 main 分支上触发
  workflow_dispatch:  # 允许手动触发

# 权限设置
permissions:
  contents: read     # 读取仓库内容的权限
  pages: write       # 写入 GitHub Pages 的权限
  id-token: write    # 身份验证令牌的权限

# 并发控制
concurrency:
  group: pages
  cancel-in-progress: false

# 具体的任务定义
jobs:
  # 构建任务
  build:
    runs-on: ubuntu-latest  # 在最新版 Ubuntu 环境中运行
    steps:
      - name: Checkout      # 步骤1：检出代码
        uses: actions/checkout@v4
      
      - name: Setup Node    # 步骤2：设置 Node.js 环境
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: npm
      
      - name: Setup Pages   # 步骤3：设置 GitHub Pages
        uses: actions/configure-pages@v4
      
      - name: Install dependencies  # 步骤4：安装项目依赖
        run: npm ci
      
      - name: Build with VuePress  # 步骤5：构建 VuePress 站点
        run: npm run docs:build
        
      - name: Debug output  # 步骤5.5：调试输出，查看构建结果
        run: |
          echo "Checking build output..."
          ls -la docs/.vuepress/dist
      
      - name: Upload artifact      # 步骤6：上传构建结果
        uses: actions/upload-pages-artifact@v3
        with:
          path: docs/.vuepress/dist

  # 部署任务
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    needs: build            # 需要等待 build 任务完成
    runs-on: ubuntu-latest
    name: Deploy
    steps:
      - name: Deploy to GitHub Pages  # 部署到 GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
